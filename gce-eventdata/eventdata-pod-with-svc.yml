---
# ---------------------------------------------------------
# EventData - Service
# ---------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: eventdataweb
  labels:
    app: eventdata
spec:
  selector:
    app: eventdata
    tier: web
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer
  # eventdata.2ravens.org
  loadBalancerIP: 35.188.4.189
  #
  # 2ravens.org
  #loadBalancerIP: 104.197.235.238
---
# ---------------------------------------------------------
# EventData - Kubernetes Pod File
# ---------------------------------------------------------
apiVersion: v1
kind: Pod
metadata:
  name: ravens-eventdata-web
  labels:
    app: eventdata
spec:
  restartPolicy: Always
  volumes:
    - name: ravens-volume
      emptyDir: {}
    - name: eventdata-sql-instance-credentials
      secret:
        secretName: eventdata-sql-instance-credentials
  containers:
  # -------------------------
  # 1 of 4: Ravens nginx
  # - reverse proxy for ta3-main
  # -------------------------
  - name: ravens-nginx
    image: tworavens/eventdata-ravens-nginx:latest
    ports:
      - containerPort: 80
        name: http
        protocol: TCP
  # -------------------------
  # 2 of 4: cloudsql proxy
  # -------------------------
  - name: cloudsql-proxy
    image: gcr.io/cloudsql-docker/gce-proxy:1.11
    command: ["/cloud_sql_proxy",
              "-instances=raven2-186120:us-central1:raven-sql-eventdata=tcp:3306",
              "-credential_file=/secrets/cloudsql/credentials.json"]
    volumeMounts:
    - name: eventdata-sql-instance-credentials
      mountPath: /secrets/cloudsql
      readOnly: true
  # -------------------------
  # 3 of 4: TA3 main container
  # - includes entry point for evaluation
  # -------------------------
  - name: ta3-main
    image: tworavens/eventdata-ravens-main:latest
    command: ["event_data_start.sh"]
    ports:
    # Main web port; nginx makes this available via port 80
    - containerPort: 8080
      name: http
      protocol: TCP
    env:
    # environment variables passed to container
    - name: DJANGO_SETTINGS_MODULE
      value: tworavensproject.settings.event_data_gce
    - name: TA2_STATIC_TEST_MODE
      value: "True"
    - name: DB_HOST
      value: "127.0.0.1"
    - name: DB_PORT
      value: "3306"
    - name: DB_USER
      valueFrom:
        secretKeyRef:
          name: eventdata-sql-db-credentials
          key: username
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: eventdata-sql-db-credentials
          key: password
    volumeMounts:
      - name: "ravens-volume"
        mountPath: "/ravens_volume"
        readOnly: false
    # liveness is for restart
    livenessProbe:
      httpGet:
        path: /monitoring/alive
        port: 8080
      initialDelaySeconds: 5
      timeoutSeconds: 1
      periodSeconds: 10
      failureThreshold: 3
    # readiness: ready for traffic
    readinessProbe:
      httpGet:
        path: /monitoring/alive
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 10
  # -------------------------
  # 4 of 4: Rook R services
  # -------------------------
  - name: rook-service
    image: tworavens/eventdata-ravens-r-service:latest
    # same mounts as ta3-main and ta2-main
    volumeMounts:
      - name: "ravens-volume"
        mountPath: "/ravens_volume"
        readOnly: false
    # web port
    ports:
      - containerPort: 8000
        name: http
        protocol: TCP
    # environment variables passed to container
    env:
      # Also set to "yes" in the Dockefile
      - name: ROOK_USE_PRODUCTION_MODE
        value: "yes"
      - name: EVENTDATA_ROOK_URL_BASE
        value: "http://eventdata.2ravens.org"
    # restart if this is failing
    #livenessProbe:
    #  httpGet:
    #    path: /custom/healthcheckapp
    #    port: 8000
    #  initialDelaySeconds: 5
    #  timeoutSeconds: 1
    #  periodSeconds: 10
    #  failureThreshold: 3
    # readiness: ready for traffic
    #readinessProbe:
    #  httpGet:
    #    path: /custom/healthcheckapp
    #    port: 8000
    #  initialDelaySeconds: 20
    #  periodSeconds: 10
