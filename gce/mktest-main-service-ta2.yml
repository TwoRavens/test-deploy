apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tworavensweb
  labels:
    app: tworavens
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: tworavens
        tier: web
    spec:
      restartPolicy: Always
      volumes:
        - name: ravens-volume
          emptyDir: {}
        #- name: ravens-volume
        #  # This GCE PD must already exist.
        #  gcePersistentDisk:
        #    pdName: raven-disk-01
        #    fsType: ext4
      containers:
      - name: ta3-main
        image: tworavens/ravens-main:gce
        command: ["gce_start.sh"]
        #args: ["-f", "/dev/null"]
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        # current tworavens has a mount at /ravens_volume
        volumeMounts:
          - mountPath: "/ravens_volume"
            name: "ravens-volume"
            readOnly: false
        # environment variables passed to container
        env:
          # CONFIG_JSON_PATH
          - name: CONFIG_JSON_PATH
            value: /ravens_volume/config_185_baseball.json
          # Turn off test mode
          - name: TA2_STATIC_TEST_MODE
            value: "False"
          # Reference to the gRPC server using the pod name and TA2 port
          - name: TA2_TEST_SERVER_URL
            value: "localhost:45042"
          # Url to TA3 R/rook web service
          - name: R_DEV_SERVER_BASE
            value: "http://localhost:8000/custom/"
        #livenessProbe:
        #  # restart if not responding
        #  httpGet:
        #    path: /monitoring/alive
        #    port: 8080
        #  initialDelaySeconds: 5
        #  timeoutSeconds: 1
        #  periodSeconds: 10
        #  failureThreshold: 3
        #readinessProbe:
        #  # ready for traffic
        #  httpGet:
        #    path: /monitoring/alive
        #    port: 8080
        #  initialDelaySeconds: 10
        #  periodSeconds: 10
      # -------------------------
      # ROOK CONTAINER SPECS
      # -------------------------
      - name: rook-service
        image: tworavens/ravens-r-service:latest
        # same mounts as ta3-main and ta2-main
        volumeMounts:
          # ravens volume shared w/ ta3-main
          - mountPath: "/ravens_volume"
            name: "ravens-volume"
            readOnly: false
        # web port
        ports:
          - containerPort: 8000
            name: http
            protocol: TCP
        # environment variables passed to container
        env:
          # NIST eval id
          - name: EVAL_ID
            value: raven1
          # Also set to "yes" in the Dockefile
          - name: ROOK_USE_PRODUCTION_MODE
            value: "yes"
      # -------------------------
      # TA2 CONTAINER SPECS
      # -------------------------
      - name: ta2-main
       image: gcr.io/raven2-186120/test-service-t2:latest
        volumeMounts:
          - mountPath: "/ravens_volume"
            name: "ravens-volume"
            readOnly: false
        # web port
        ports:
          - containerPort: 45042
            name: grpc
            protocol: TCP
        # environment variables passed to container
        env:
          # NIST eval id
          - name: EVAL_ID
            value: raven1
          # Also set to "yes" in the Dockerfile
          - name: CONFIG_JSON_PATH
            value: "/ravens_volume/config_185_baseball.json"
