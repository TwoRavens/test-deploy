---
# This is a jump server test file to run
# the TA3 in "test mode"--e.g. w/o a TA2
# NOTE: If the IP in line 15 is reserved, comment out line 15
#
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-raven
  name: raven-web-service
spec:
  type: LoadBalancer
  loadBalancerIP: 104.197.235.238 # 2ravens.org
  selector:
    app: tworavens
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: tworavensweb
  labels:
    app: tworavens
spec:
  restartPolicy: Always
  volumes:
    - name: ravens-volume
      emptyDir: {}
    # ----------------------------
    # Volumes for jump server data
    # ----------------------------
    - name: input-data
      emptyDir: {}
    #- name: input-data
    #  hostPath:
    #    path: /opt/datasets/seed_datasets_current/185_baseball
    #    type: Directory
    - name: output-data
      emptyDir: {}
      #persistentVolumeClaim:
      #  claimName: eval-output-pv-claim
    # for debug
    #- name: seed-data
    #  hostPath:
    #    path: /opt/datasets/seed_datasets_current
    #    type: Directory
  containers:
  # -------------------------
  # 1 of 6: Ravens nginx
  # -------------------------
  - name: ravens-nginx
    image: tworavens/ravens-nginx:develop
    #resources:
    #  requests:
    #    memory: 256Mi
    #    cpu: 1
    ports:
      - containerPort: 80
        name: http
        protocol: TCP
  # -------------------------
  # 2 of 6: redis
  # -------------------------
  - name: redis
    image: redis:4.0
    #resources:
    #  requests:
    #    memory: 100Mi
    #    cpu: 1
    ports:
    - containerPort: 6379
  # -------------------------
  # 3 of 6: TA3 main (web app)
  # -------------------------
  - name: ta3-main
    image: tworavens/ravens-main:develop
    imagePullPolicy: Always
    command: ["d3m_start.sh"]
    #resources:
    #  requests:
    #    memory: 512Mi
    #    cpu: 1
    ports:
      - containerPort: 8080
        name: http
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between TwoRavens and rook
      # - has some test data if needed
      # ----------------------------------
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
      # ----------------------------------
      # Jump server: input-data contains the D3M data
      # ----------------------------------
      - name: input-data
        mountPath: /var/webapps/ravens_volume/test_data/185_baseball
        readOnly: true
      - name: output-data
        mountPath: /var/webapps/ravens_volume/test_data/test_output
        readOnly: false
      # for debug
      #- name: seed-data
      #  mountPath: /seed-data
      #  readOnly: true
    # environment variables passed to container
    env:
      # ----------------------------------
      # Is test mode "True/False"; If "True",
      # don't attempt to connect to an external TA2
      # ----------------------------------
      - name: TA2_STATIC_TEST_MODE
        value: "False"
      - name: LOCAL_SETUP_DIR
        value: /ravens_volume/2ravens_local_setup
      # ----------------------------------
      # Reference to the gRPC server using the pod name and TA2 port
      # ----------------------------------
      - name: TA2_TEST_SERVER_URL
        value: "tworavensweb:45042"
      # ----------------------------------
      # Url to TA3 R/rook web service
      # ----------------------------------
      - name: R_DEV_SERVER_BASE
        value: "http://localhost:8000/custom/"
      # ----------------------------------
      # Note this is within the same pod
      # ----------------------------------
      - name: REDIS_HOST
        value: localhost
      # ----------------------------------
      # D3M summer eval variables
      # ref: https://goo.gl/L1J9i5
      # ----------------------------------
      - name: D3MRUN
        value: "ta2ta3"
      - name: D3MINPUTDIR
        value: "/input"
      - name: D3MOUTPUTDIR
        value: "/output"
      #- name: D3MTESTOPT
      #  value: "/output/bestfit.py"
      - name: D3MCPU
        value: "1"
      - name: D3MRAM
        value: "512Mi"
      - name: D3MTIMEOUT
        value: "10"
    # ----------------------------------
    # livenessProbe: restart if this is failing
    # ----------------------------------
    livenessProbe:
      httpGet:
        path: /monitoring/alive
        port: 8080
      initialDelaySeconds: 15
      timeoutSeconds: 1
      periodSeconds: 10
      failureThreshold: 3
    # ----------------------------------
    # readinessProbe: ready for traffic
    # ----------------------------------
    readinessProbe:
      httpGet:
        path: /monitoring/alive
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 10
  # -------------------------
  # 4 of 6: celery worker
  # -------------------------
  - name: celery-worker
    image: tworavens/ravens-main:develop
    imagePullPolicy: Always
    command: ['celery', '-A', 'tworavensproject', 'worker', '-l', 'info']
    #resources:
    #  requests:
    #    memory: 512Mi
    #    cpu: 1
    ports:
      - containerPort: 8080
        name: http
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between TwoRavens and rook
      # - has some test data if needed
      # ----------------------------------
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
      # ----------------------------------
      # Jump server: input-data contains the D3M data
      # ----------------------------------
      - name: input-data
        mountPath: /var/webapps/ravens_volume/test_data/185_baseball
        readOnly: true
      - name: output-data
        mountPath: /var/webapps/ravens_volume/test_data/test_output
        readOnly: false
    # environment variables passed to container
    env:
      # ----------------------------------
      # Note this is within the same pod
      # ----------------------------------
      - name: REDIS_HOST
        value: localhost
      # ----------------------------------
      # Is test mode "True/False"; If "True",
      # don't attempt to connect to an external TA2
      # ----------------------------------
      - name: TA2_STATIC_TEST_MODE
        value: "False"
      - name: LOCAL_SETUP_DIR
        value: /ravens_volume/2ravens_local_setup
      # ----------------------------------
      # Reference to the gRPC server using the pod name and TA2 port
      # ----------------------------------
      - name: TA2_TEST_SERVER_URL
        value: "tworavensweb:45042"
      # ----------------------------------
      # Url to TA3 R/rook web service
      # ----------------------------------
      - name: R_DEV_SERVER_BASE
        value: "http://localhost:8000/custom/"
      # ----------------------------------
      # D3M summer eval variables
      # ref: https://goo.gl/L1J9i5
      # ----------------------------------
      - name: D3MRUN
        value: "ta2ta3"
      - name: D3MINPUTDIR
        value: "/input"
      - name: D3MOUTPUTDIR
        value: "/output"
      #- name: D3MTESTOPT
      #  value: "/output/bestfit.py"
      - name: D3MCPU
        value: "1"
      - name: D3MRAM
        value: "512Mi"
      - name: D3MTIMEOUT
        value: "10"
  # -------------------------
  # 5 of 6: rook
  # -------------------------
  - name: rook-service
    image: tworavens/ravens-r-service:develop
    imagePullPolicy: Always
    #resources:
    #  requests:
    #    memory: 512Mi
    #    cpu: 1
    volumeMounts:
      # ravens volume shared w/ ta3-main
      # ----------------------------------
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
      # ----------------------------------
      # Jump server: input-data contains the data
      # ----------------------------------
      - name: input-data
        mountPath: /input
        readOnly: true
      - name: output-data
        mountPath: /output
        readOnly: false    # web port
    ports:
      - containerPort: 8000
        name: http
        protocol: TCP
    env:
      # ----------------------------------
      # Also set to "yes" in the Dockerfile
      # ----------------------------------
      - name: ROOK_USE_PRODUCTION_MODE
        value: "yes"
      # ----------------------------------
      # D3M summer eval variables
      # ref: https://goo.gl/L1J9i5
      # ----------------------------------
      - name: D3MINPUTDIR
        value: "/input"
      - name: D3MOUTPUTDIR
        value: "/output"
    # ----------------------------------
    # livenessProbe: restart if this is failing
    # ----------------------------------
    livenessProbe:
      httpGet:
        path: /custom/healthcheckapp
        port: 8000
      initialDelaySeconds: 15
      timeoutSeconds: 1
      periodSeconds: 20
      failureThreshold: 3
    # ----------------------------------
    # readinessProbe: ready for traffic
    # ----------------------------------
    readinessProbe:
      httpGet:
        path: /custom/healthcheckapp
        port: 8000
      initialDelaySeconds: 10
      periodSeconds: 10
  # -------------------------
  # 6 of 6: TA2 main
  # -------------------------
  - name: ta2-main
    image: gcr.io/raven2-186120/test-ta2-r3:latest
    #image: registry.datadrivendiscovery.org/tworavens/tworavens-deploy/ta2_server:live
    resources:
      requests:
        memory: 512Mi
        #cpu: 1
    ports:
      - containerPort: 45042
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between TwoRavens and rook
      # - has some test data if needed
      # ----------------------------------
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
      # ----------------------------------
      # Jump server: input-data contains the data
      # ----------------------------------
      - name: input-data
        mountPath: /input
        readOnly: true
      - name: output-data
        mountPath: /output
        readOnly: false
    env:
      # ----------------------------------
      # D3M summer eval variables
      # ref: https://goo.gl/L1J9i5
      # ----------------------------------
      - name: D3MPORT
        value: "45042"
      - name: D3MRUN
        value: "ta2ta3"
      - name: D3MINPUTDIR
        value: "/input"
      - name: D3MOUTPUTDIR
        value: "/output"
      #- name: D3MTESTOPT
      #  value: "/output/bestfit.py"
      - name: D3MCPU
        value: "1"
      - name: D3MRAM
        value: "512Mi"
      - name: D3MTIMEOUT
        value: "10"
  #imagePullSecrets:
  #- name: regcred
