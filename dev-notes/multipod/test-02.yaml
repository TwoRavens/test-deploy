---
# Testing persistentVolume and persistentVolumeClaim
#
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-1
spec:
  storageClassName: "twopod-10g-pv-1"
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  gcePersistentDisk:
    fsType: "ext4"
    pdName: "gce-pd-1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-1
spec:
  storageClassName: "twopod-10g-pv-1"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 30Mi
---
#
apiVersion: v1
kind: Service
metadata:
  name: twopod-service
  labels:
    app: ta3
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-raven
spec:
  type: LoadBalancer
  # loadBalancerIP: 104.197.235.238
  #  loadBalancerIP: 104.197.235.238  # 2ravens.org
  selector:
    app: twopod-pod
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: twopod
  labels:
    app: twopod-pod
spec:
  restartPolicy: Never
  containers:
  # -------------------------
  # 1 of 2: nginx
  # -------------------------
  - name: twopod-nginx
    image: nginx
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: 80
        name: http
        protocol: TCP
    envFrom:
      - configMapRef:
          name: twopod-config
    volumeMounts:
      # ----------------------
      # D3M config volume mounts
      # ----------------------
      - name: input-data
        mountPath: /input
        readOnly: true
      - name: output-data
        mountPath: /output
        readOnly: true
      # ----------------------
      # END: D3M config volume mounts
      # ----------------------
  # -------------------------
  # 2 of 2: python
  # -------------------------
  - name: twopod-python
    #image: hello-python:latest
    image: rprasad7/hello-python:test
    imagePullPolicy: IfNotPresent
    #ports:
    #  - containerPort: 80
    #    name: http
    #    protocol: TCP
    envFrom:
      - configMapRef:
          name: twopod-config
    volumeMounts:
      # ----------------------
      # D3M config volume mounts
      # ----------------------
      - name: input-data
        mountPath: /input
        readOnly: true
      - name: output-data
        mountPath: /output
        readOnly: false
      # ----------------------
      # END: D3M config volume mounts
      # ----------------------
  # ----------------------------
  # Volumes
  # ----------------------------
  volumes:
    - name: input-data
      emptyDir: {}
      #hostPath:
        #path:
        #type: Directory
    - name: output-data
      #emptyDir: {}
      persistentVolumeClaim:
        claimName: pvc-1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: twopod-config
data:
  D3MINPUTDIR: "/ravens_volume/test_data"
  D3MOUTPUTDIR: "/ravens_volume/test_output"
---
