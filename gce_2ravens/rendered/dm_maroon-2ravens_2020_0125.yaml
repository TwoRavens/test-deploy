---
# -------------------------------------
#   TA3 Service
#   https://2ravens.org
#   template: dm_gates_onepod_01.yaml
# -------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: tworavens-service-maroon-2ravens
  labels:
    app: ta3-maroon-2ravens
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-raven
spec:
  type: LoadBalancer
  loadBalancerIP: 10.108.29.12
  #  loadBalancerIP: 104.197.235.238  # 2ravens.org
  selector:
    app: ta3-maroon-2ravens
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
---
# -------------------------------------
#   TA3 Pod
# -------------------------------------
apiVersion: v1
kind: Pod
metadata:
  name: tworavensweb-maroon-2ravens
  labels:
    app: ta3-maroon-2ravens
spec:
  restartPolicy: Never
  containers:
  # -------------------------
  # 1 of 1: TA2
  # -------------------------
  - name: ta2-container
    # Brown TA2
    image: registry.datadrivendiscovery.org/zshang/docker_images:ta2
    imagePullPolicy: IfNotPresent
    # -----------------------------------
    # ta2_resources
    # ----------------------------------
    resources:
      requests:
         memory: "20000Mi"
         cpu: "2000m"
      #limits:
      #   memory: "25000Mi"
      #   cpu: "4000m"
    ports:
      - containerPort: 45042
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between containers
      # ref: dm_volume_mounts_01.yaml
      # ----------------------------------
      - name: ravens-volume
        mountPath: /ravens_volume
        subPath: 2ravens_org-maroon-2ravens
        readOnly: false
      # ----------------------------------
    envFrom:
      - configMapRef:
          name: ravens-django-config-maroon-2ravens
      - configMapRef:
          name: ravens-config-d3m-maroon-2ravens
    env:
      - name: D3MRUN
        value: "ta2"
      #- name: AM_ENV
      #  value: "DEBUG"
  # -------------------------
  # 1 of 6: Ravens nginx
  # -------------------------
  - name: ravens-nginx
    image: tworavens/ravens-nginx:comfrey2
    imagePullPolicy: Always
    # -----------------------------------
    # nginx_resources
    # ----------------------------------
    resources:
      requests:
         memory: "256Mi"
         cpu: "500m"
      #limits:
      #   memory: "500Mi"
      #   cpu: "500m"
    ports:
      - containerPort: 80
        name: http
        protocol: TCP
    envFrom:
      - configMapRef:
          name: ravens-django-config-maroon-2ravens
    volumeMounts:
      # ----------------------------------
      # shared between containers
      # ref: dm_volume_mounts_01.yaml
      # ----------------------------------
      - name: ravens-volume
        mountPath: /ravens_volume
        subPath: 2ravens_org-maroon-2ravens
        readOnly: false
      # ----------------------------------
  # -------------------------
  # 2 of 6: redis
  # -------------------------
  - name: redis
    image: redis:4.0
    # -----------------------------------
    # redis_resources
    # ----------------------------------
    resources:
      requests:
         memory: "500Mi"
         cpu: "500m"
      #limits:
      #   memory: "1000Mi"
      #   cpu: "500m"
    ports:
    - containerPort: 6379
    volumeMounts:
      # "backdoor": For viewing outer directories
      - name: ravens-volume
        mountPath: /ravens_volume
        readOnly: false
  # -------------------------
  # 3 of 6: TA3 main (web app)
  # -------------------------
  - name: ta3-main
    image: tworavens/ravens-main:comfrey2
    #image: tworavens/ravens-main:develop
    imagePullPolicy: Always
    #command: ["d3m_start_multiuser.sh"]
    command: ["d3m_start_gates_01.sh"]
    # -----------------------------------
    # ta3_resources
    # ----------------------------------
    resources:
      requests:
         memory: "1000Mi"
         cpu: "1000m"
      #limits:
      #   memory: "3000Mi"
      #   cpu: "1500m"
    ports:
      - containerPort: 8080
        name: http
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between containers
      # ref: dm_volume_mounts_01.yaml
      # ----------------------------------
      - name: ravens-volume
        mountPath: /ravens_volume
        subPath: 2ravens_org-maroon-2ravens
        readOnly: false
      # ----------------------------------
    envFrom:
      - configMapRef:
          name: ravens-django-config-maroon-2ravens
      - configMapRef:
          name: ravens-config-d3m-maroon-2ravens
    env:
      - name: SECRET_KEY
        value: f!@0^(7v_!45#c4t#!xjk433&x1y2vzo)u@v6s9pc&+gqz3s2&
      - name: MONGO_CONNECTION_STRING
        value: "mongodb://localhost:27017"
      - name: TEST_DATASETS
        value: "185_baseball 196_autoMpg DA_poverty_estimation TR13_Ethiopia_Health TR31_PRIO_GRID"
      - name: D3MCPU
        value: "1"
      - name: D3MRAM
        value: "1Gi"
  # -------------------------
  # 4 of 6: celery worker
  # -------------------------
  - name: celery-worker
    image: tworavens/ravens-main:comfrey2
    imagePullPolicy: Always
    command: ['celery', '-A', 'tworavensproject', 'worker', '-l', 'info']
    # command: ['celery', '-A', 'tworavensproject', 'worker', '--concurrency=7', '-l', 'info']
    # -----------------------------------
    # celery_resources
    # ----------------------------------
    resources:
      requests:
         memory: "4500Mi"
         cpu: "2000m"
      #limits:
      #   memory: "6000Mi"
      #   cpu: "2000m"
    ports:
      - containerPort: 8080
        name: http
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between containers
      # ref: dm_volume_mounts_01.yaml
      # ----------------------------------
      - name: ravens-volume
        mountPath: /ravens_volume
        subPath: 2ravens_org-maroon-2ravens
        readOnly: false
      # ----------------------------------
    # ---------------------------------
    # environment variables passed to container
    # ---------------------------------
    envFrom:
      - configMapRef:
          name: ravens-django-config-maroon-2ravens
      - configMapRef:
          name: ravens-config-d3m-maroon-2ravens
    env:
      - name: MONGO_CONNECTION_STRING
        value: "mongodb://localhost:27017"
      - name: SECRET_KEY
        value: f!@0^(7v_!45#c4t#!xjk433&x1y2vzo)u@v6s9pc&+gqz3s2&
  # -------------------------
  # 5 of 6: mongo
  # -------------------------
  - name: mongo-2ravens
    image: mongo
    # -----------------------------------
    # mongo_resources
    # ----------------------------------
    resources:
      requests:
         memory: "1000Mi"
         cpu: "500m"
      #limits:
      #   memory: "2000Mi"
      #   cpu: "1000m"
    ports:
      - containerPort: 27017
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between containers
      # ref: dm_volume_mounts_01.yaml
      # ----------------------------------
      - name: ravens-volume
        mountPath: /ravens_volume
        subPath: 2ravens_org-maroon-2ravens
        readOnly: false
      # ----------------------------------
  # -------------------------
  # 6 of 6: rook
  # -------------------------
  - name: rook-service
    image: tworavens/ravens-r-service:comfrey2
    imagePullPolicy: IfNotPresent
    # -----------------------------------
    # rook_resources
    # ----------------------------------
    resources:
      requests:
         memory: "1000Mi"
         cpu: "500m"
      #limits:
      #   memory: "2000Mi"
      #   cpu: "1000m"
    volumeMounts:
      # ----------------------------------
      # shared between containers
      # ref: dm_volume_mounts_01.yaml
      # ----------------------------------
      - name: ravens-volume
        mountPath: /ravens_volume
        subPath: 2ravens_org-maroon-2ravens
        readOnly: false
      # ----------------------------------
    ports:
      - containerPort: 8000
        name: http
        protocol: TCP
    envFrom:
      - configMapRef:
          name: ravens-django-config-maroon-2ravens
      - configMapRef:
          name: ravens-config-d3m-maroon-2ravens
  # ----------------------------
  # Volumes
  # ----------------------------
  volumes:
    - name: ravens-volume
      emptyDir: {}
      #persistentVolumeClaim:
      #  claimName: eval-output-pv-claim
      #  readOnly: false
  # ----------------------------
  # regcred notes: https://datadrivendiscovery.org/wiki/display/gov/Pulling-From-Private-Repository
  # ----------------------------
  imagePullSecrets:
  - name: regcred
---
# ---------------------------------------
# TA3 configmap used by:
#   main (TA3), rook-service, celery-worker,
# ---------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: ravens-django-config-maroon-2ravens
data:
  DJANGO_SETTINGS_MODULE: "tworavensproject.settings.dev_container2"
  LOCAL_SETUP_DIR: /ravens_volume/2ravens_local_setup
  #
  RAVENS_SERVER_NAME: "maroon-2ravens.datadrivendiscovery.org"
  SESSION_COOKIE_NAME: "ravens_maroon-2ravens_cookie"
  CSRF_COOKIE_NAME: "ravens_maroon-2ravens_csrf_cookie"
  # When TA2_STATIC_TEST_MODE is set to True, TA2 is ignored
  TA2_STATIC_TEST_MODE: "False"
  #
  DEBUG: "False"
  DISPLAY_DATAMART_UI: "True"
  #
  # Reference to the gRPC server using the pod name and TA2 port
  TA2_D3M_SOLVER_ENABLED: "True"
  TA2_WRAPPED_SOLVERS: '["two-ravens", "mlbox", "tpot"]'
  TA2_TEST_SERVER_URL: "tworavensweb-maroon-2ravens:45042"
  # gRPC server in separate pod:
  #TA2_TEST_SERVER_URL: "ta2-service-maroon-2ravens:45042"
  #
  # Url to TA3 R/rook web service
  R_DEV_SERVER_BASE: "http://localhost:8000/"
  #
  # Redis
  REDIS_HOST: localhost
  #
  # valid values: "ws://" and  "wss://"
  WEBSOCKET_PREFIX: "wss://"
  #
  # Mongo db name; Mongo creds are in secrets
  TWORAVENS_MONGO_DB_NAME: "harvard"
  #
  # Only used by rook--and redundant as also set to "yes" in Dockerfile
  ROOK_USE_PRODUCTION_MODE: "yes"
  #
---
# ---------------------------------------
# D3M Configmap used by:
#   ravens-main (TA3), rook-service, celery-worker, TA2
# ---------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: ravens-config-d3m-maroon-2ravens
data:
  D3MRUN: "ta2ta3"
  D3MINPUTDIR: "/ravens_volume/test_data"
  D3MOUTPUTDIR: "/ravens_volume/test_output"
  D3MSTATICDIR: "/ravens_volume/test_output/static_dir"
  D3MPROBLEMPATH: "/ravens_volume/test_data/185_baseball/TRAIN/problem_TRAIN/problemDoc.json"
  D3MLOCALDIR: "/ravens_volume/test_output/local_dir"
  # Used by TA2
  #D3MCPU: "1"
  #D3MRAM: "512Mi"
  #
  D3MTIMEOUT: "600"
  D3MCONTEXT: "TESTING"
  #
  DATAMART_URL_NYU: "https://auctus.vida-nyu.org"
  DATAMART_URL_ISI: "http://10.108.20.4:9000/"
---