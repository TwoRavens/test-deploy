apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: 2ravens-main
  # these labels can be applied automatically
  # from the labels in the pod template if not set
  # labels:
  #   app: redis
  #   role: master
  #   tier: backend
spec:
  # this replicas value is default
  # modify it according to your case
  replicas: 1
  # selector can be applied automatically
  # from the labels in the pod template if not set
  # selector:
  #   matchLabels:
  #     app: guestbook
  #     role: master
  #     tier: backend
  template:
    metadata:
      labels:
        app: 2ravens-main
        role: main
        tier: backend
    spec:
      restartPolicy: Never
      volumes:
        # TA3 specification 'shared-vol' volume mount
        # (this is now added by the NIST script)
        # Additional Volume mounted for TwoRavens sharing
        - emptyDir: {}
          name: shared-vol
        - emptyDir: {}
          name: ravens-volume
        #- name: "shared-vol"
        #  hostPath:
        #    path: "/ravens_volume/shared-nist"
        #- name: "ravens-volume"
        #  hostPath:
        #    path: "/ravens_volume"
      containers:
      - name: ta3-main
        image: tworavens/ravens-main:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        # current tworavens has a mount at /ravens_volume
        volumeMounts:
          - mountPath: /shared_dir
            name: shared-vol
            readOnly: false
          - mountPath: "/ravens_volume"
            name: "ravens-volume"
            readOnly: false
        # environment variables passed to container
        env:
          # eval id
          - name: EVAL_ID
            value: raven1
          # Turn off test mode
          - name: TA2_STATIC_TEST_MODE
            value: "True"
          # Reference to the gRPC server using the pod name and TA2 port
          #- name: TA2_TEST_SERVER_URL
          #  value: "raven1:50051"
          # Url to TA3 R/rook web service
          - name: R_DEV_SERVER_BASE
            value: "http://localhost:8000/custom/"
        livenessProbe:
          # restart if not responding
          httpGet:
            path: /monitoring/alive
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          # ready for traffic
          httpGet:
            path: /monitoring/alive
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
