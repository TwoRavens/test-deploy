---
# ----------------------------------------------------
# CI system.yml template - v.003
#  - ravens_volume removed from TA2
#  - podPreset
# ----------------------------------------------------
# Load balancer for DM
# Note: Readiness probes removed for ta3/rook -- they need to be retimed
#
apiVersion: v1
kind: Service
metadata:
  name: two-ravens-d3m
spec:
  type: LoadBalancer
  #
  # range reference: https://datadrivendiscovery.org/wiki/display/gov/Creating+Services
  # proxy tool: https://proxy.datadrivendiscovery.org
  #
  loadBalancerIP: 10.108.29.7  # test IP; valid range: 10.108.25.1-10.108.30.254
  selector:
    role: ta3
  ports:
    - name: http
      port: 80
      targetPort: 80
---
# ---------------------------------------
# Configmap used by:
#   main (TA3), celery-worker, rook-service
# ---------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: ravens-config-d3m
data:
  # D3MPROBLEMPATH set to get initial CI working
  #   - assumes /input is a top level of https://gitlab.datadrivendiscovery.org/d3m/datasets
  D3MPROBLEMPATH: "/input/TRAIN/problem_TRAIN/problemDoc.json"
  # --------------------------------
  # volumes configured through CI k8s preset
  # --------------------------------
  D3MRUN: "ta2ta3"
  D3MINPUTDIR: "/input"
  D3MOUTPUTDIR: "/output"
  D3MLOCALDIR: "/local"
  D3MSTATICDIR: "/static"
  # --------------------------------
  # Only used by the TA2
  # --------------------------------
  D3MCPU: "1"
  D3MRAM: "512Mi"
  D3MTIMEOUT: "3600"
  # --------------------------------
  # -- deprecated --
  # --------------------------------
  # D3MPORT: "45042"
---
# ---------------------------------------
# Configmap used by:
#   main (TA3), celery-worker, rook-service
# ---------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: ravens-config-ta3
data:
  #
  # Reference to the gRPC server using the pod name and TA2 port
  #
  #TA2_TEST_SERVER_URL: "ta2:45042"
  TA2_TEST_SERVER_URL: "tworavensweb:45042"
  #
  # TA3 specific
  #
  DJANGO_SETTINGS_MODULE: "tworavensproject.settings.dev_container2"
  LOCAL_SETUP_DIR: /ravens_volume/2ravens_local_setup
  TA2_STATIC_TEST_MODE: "False"
  DEBUG: "False"
  #
  # Url to TA3 R/rook web service
  R_DEV_SERVER_BASE: "http://localhost:8000/custom/"
  #
  # Redis
  REDIS_HOST: localhost
  #
  # valid values: "ws://" and  "wss://"
  WEBSOCKET_PREFIX: "wss://"
  #
  # Mongo db name
  TWORAVENS_MONGO_DB_NAME: "tworavens_mongo"
  # Not a real key, only for CI
  SECRET_KEY: f!@0^(dl94d8#c4t#!xjk412345w2vzo)u@v6s4re&+gqz3s2&
  MONGO_CONNECTION_STRING: "mongodb://localhost:27017"
---
apiVersion: v1
kind: Pod
metadata:
  name: tworavensweb
  labels:
    role: ta3
spec:
  restartPolicy: Never
  volumes:
    # ----------------------------
    # TA3 specific volume
    #  - may be shared with a TA2
    # ----------------------------
    - name: ravens-volume
      emptyDir: {}
    #- name: ravens-volume
    #  emptyDir: {}
    # ----------------------------
    # Volumes for jump server data
    # ----------------------------
    - name: datasets-data
      hostPath:
        path: /datasets/opt/datasets # todo replace me
        type: Directory
    - name: input-data
      hostPath:
        path: /datasets/opt/datasets/seed_datasets_current/185_baseball # todo replace me
        type: Directory
    - name: static-data
      hostPath:
        path: /opt/static_files
        type: Directory
    - name: output-data
      persistentVolumeClaim:
        claimName: eval-output-pv-claim
  containers:
  # -------------------------
  # 1 of 6: Ravens nginx
  # -------------------------
  - name: ravens-nginx
    image: tworavens/ravens-nginx:latest
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: "0.3"
    ports:
      - containerPort: 80
        name: http
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between containers (non-persistent)
      # ----------------------------------
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
      # ----------------------------------
      # D3M config volume mounts
      # ----------------------------------
      - name: input-data
        mountPath: /input
        readOnly: true
      - name: output-data
        mountPath: /output
        readOnly: false
      - name: static-data
        mountPath: /static
        readOnly: true
      # ----------------------------------
  # -------------------------
  # 2 of 6: main (web app)
  # -------------------------
  - name: main
    image: tworavens/ravens-main:latest
    imagePullPolicy: IfNotPresent
    command: ["d3m_start.sh"]
    resources:
      requests:
        memory: 1Gi
        cpu: "0.75"
    ports:
      - containerPort: 8080
        name: http
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between containers (non-persistent)
      # ----------------------------------
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
      # ----------------------------------
      # D3M config volume mounts
      # ----------------------------------
      - name: input-data
        mountPath: /input
        readOnly: true
      - name: output-data
        mountPath: /output
        readOnly: false
      - name: static-data
        mountPath: /static
        readOnly: true
      # ----------------------------------
    envFrom:
      - configMapRef:
          name: ravens-config-d3m
      - configMapRef:
          name: ravens-config-ta3
  # -------------------------
  # 3 of 6: redis
  # -------------------------
  - name: redis
    image: redis:4.0
    resources:
      requests:
        memory: 100Mi
        cpu: "0.3"
    ports:
    - containerPort: 6379
  # -------------------------
  # 4 of 6: celery worker
  # -------------------------
  - name: celery-worker
    image: tworavens/ravens-main:latest
    # image: registry.datadrivendiscovery.org/ta3-submissions/ta3-two-ravens/ravens-deploy-2019/ravens-main:latest
    imagePullPolicy: IfNotPresent
    command: ['celery', '-A', 'tworavensproject', 'worker', '-l', 'info']
    resources:
      requests:
        memory: 512Mi
        cpu: "0.6"
    ports:
      - containerPort: 8080
        name: http
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between containers (non-persistent)
      # ----------------------------------
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
      # ----------------------------------
      # D3M config volume mounts
      # ----------------------------------
      - name: input-data
        mountPath: /input
        readOnly: true
      - name: output-data
        mountPath: /output
        readOnly: false
      - name: static-data
        mountPath: /static
        readOnly: true
      # ----------------------------------
    # ---------------------------------
    # environment variables passed to container
    # ---------------------------------
    envFrom:
      - configMapRef:
          name: ravens-config-ta3
      - configMapRef:
          name: ravens-config-d3m
  # -------------------------
  # 5 of 6: mongo
  # -------------------------
  - name: mongo-2ravens
    image: mongo
    resources:
      requests:
        memory: 512Mi
        cpu: "0.3"
    ports:
      - containerPort: 27017
        protocol: TCP
    volumeMounts:
      # ----------------------------------
      # shared between TwoRavens and rook
      # - has some test data if needed
      # ----------------------------------
      - name: ravens-volume
        # directory location on host
        #path: /db_mongo
        mountPath: /data/db
        readOnly: false
  # -------------------------
  # 6 of 6: rook
  # -------------------------
  - name: rook-service
    image: tworavens/ravens-r-service:latest
    # image: registry.datadrivendiscovery.org/ta3-submissions/ta3-two-ravens/ravens-deploy-2019/ravens-r-service:latest
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 512Mi
        cpu: "0.75"
    volumeMounts:
      # ----------------------------------
      # shared between containers (non-persistent)
      # ----------------------------------
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
      # ----------------------------------
      # D3M config volume mounts
      # ----------------------------------
      - name: input-data
        mountPath: /input
        readOnly: true
      - name: output-data
        mountPath: /output
        readOnly: false
      - name: static-data
        mountPath: /static
        readOnly: true
      # ----------------------------------
    ports:
      - containerPort: 8000
        name: http
        protocol: TCP
    #env:
    #  # ----------------------------------
    #  # Also set to "yes" in the Dockerfile
    #  # ----------------------------------
    #  - name: ROOK_USE_PRODUCTION_MODE
    #    value: "yes"
    envFrom:
      - configMapRef:
          name: ravens-config-ta3
      - configMapRef:
          name: ravens-config-d3m

  #
  # regcred notes: https://datadrivendiscovery.org/wiki/display/gov/Pulling-From-Private-Repository
  #
  imagePullSecrets:
  - name: regcred